{"ast":null,"code":"var _jsxFileName = \"/Users/saoriuchida/ESPE REPO/epr970-1/my-app/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  class TodoApp extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        items: [],\n        text: ''\n      };\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    componentDidMount() {\n      // Load the to-do list from local storage\n      const items = JSON.parse(localStorage.getItem('items'));\n      if (items) {\n        this.setState({\n          items\n        });\n      }\n    }\n    componentDidUpdate() {\n      // Save the to-do list to local storage\n      localStorage.setItem('items', JSON.stringify(this.state.items));\n    }\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"TODO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n          items: this.state.items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"new-todo\",\n            children: \"What needs to be done?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"new-todo\",\n            onChange: this.handleChange,\n            value: this.state.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: [\"Add #\", this.state.items.length + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    }\n    handleChange(e) {\n      this.setState({\n        text: e.target.value\n      });\n    }\n    handleSubmit(e) {\n      e.preventDefault();\n      if (this.state.text.length === 0) {\n        return;\n      }\n      const newItem = {\n        text: this.state.text,\n        id: Date.now()\n      };\n      this.setState(state => ({\n        items: state.items.concat(newItem),\n        text: ''\n      }));\n    }\n  }\n  class TodoList extends React.Component {\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.props.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.text\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","App","TodoApp","Component","constructor","props","state","items","text","handleChange","bind","handleSubmit","componentDidMount","JSON","parse","localStorage","getItem","setState","componentDidUpdate","setItem","stringify","render","length","e","target","value","preventDefault","newItem","id","Date","now","concat","TodoList","map","item"],"sources":["/Users/saoriuchida/ESPE REPO/epr970-1/my-app/src/App.js"],"sourcesContent":["import React from 'react';\n\nfunction App() {\n  class TodoApp extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { items: [], text: '' };\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    componentDidMount() {\n      // Load the to-do list from local storage\n      const items = JSON.parse(localStorage.getItem('items'));\n      if (items) {\n        this.setState({ items });\n      }\n    }\n  \n    componentDidUpdate() {\n      // Save the to-do list to local storage\n      localStorage.setItem('items', JSON.stringify(this.state.items));\n    }\n  \n    render() {\n      return (\n        <div>\n          <h3>TODO</h3>\n          <TodoList items={this.state.items} />\n          <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"new-todo\">\n              What needs to be done?\n            </label>\n            <input\n              id=\"new-todo\"\n              onChange={this.handleChange}\n              value={this.state.text}\n            />\n            <button>\n              Add #{this.state.items.length + 1}\n            </button>\n          </form>\n        </div>\n      );\n    }\n    handleChange(e) {\n      this.setState({ text: e.target.value });\n    }\n  \n    handleSubmit(e) {\n      e.preventDefault();\n      if (this.state.text.length === 0) {\n        return;\n      }\n      const newItem = {\n        text: this.state.text,\n        id: Date.now()\n      };\n      this.setState(state => ({\n        items: state.items.concat(newItem),\n        text: ''\n      }));\n    }\n  }\n  \n  class TodoList extends React.Component {\n    render() {\n      return (\n        <ul>\n          {this.props.items.map(item => (\n            <li key={item.id}>{item.text}</li>\n          ))}\n        </ul>\n      );\n    }\n  }\n}\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,GAAG,GAAG;EACb,MAAMC,OAAO,SAASF,KAAK,CAACG,SAAS,CAAC;IACpCC,WAAW,CAACC,KAAK,EAAE;MACjB,KAAK,CAACA,KAAK,CAAC;MACZ,IAAI,CAACC,KAAK,GAAG;QAAEC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC;MACpC,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;MAChD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACD,IAAI,CAAC,IAAI,CAAC;IAClD;IAEAE,iBAAiB,GAAG;MAClB;MACA,MAAML,KAAK,GAAGM,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;MACvD,IAAIT,KAAK,EAAE;QACT,IAAI,CAACU,QAAQ,CAAC;UAAEV;QAAM,CAAC,CAAC;MAC1B;IACF;IAEAW,kBAAkB,GAAG;MACnB;MACAH,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEN,IAAI,CAACO,SAAS,CAAC,IAAI,CAACd,KAAK,CAACC,KAAK,CAAC,CAAC;IACjE;IAEAc,MAAM,GAAG;MACP,oBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eACb,QAAC,QAAQ;UAAC,KAAK,EAAE,IAAI,CAACf,KAAK,CAACC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG,eACrC;UAAM,QAAQ,EAAE,IAAI,CAACI,YAAa;UAAA,wBAChC;YAAO,OAAO,EAAC,UAAU;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAEjB,eACR;YACE,EAAE,EAAC,UAAU;YACb,QAAQ,EAAE,IAAI,CAACF,YAAa;YAC5B,KAAK,EAAE,IAAI,CAACH,KAAK,CAACE;UAAK;YAAA;YAAA;YAAA;UAAA,QACvB,eACF;YAAA,oBACQ,IAAI,CAACF,KAAK,CAACC,KAAK,CAACe,MAAM,GAAG,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA,QAC1B;QAAA;UAAA;UAAA;UAAA;QAAA,QACJ;MAAA;QAAA;QAAA;QAAA;MAAA,QACH;IAEV;IACAb,YAAY,CAACc,CAAC,EAAE;MACd,IAAI,CAACN,QAAQ,CAAC;QAAET,IAAI,EAAEe,CAAC,CAACC,MAAM,CAACC;MAAM,CAAC,CAAC;IACzC;IAEAd,YAAY,CAACY,CAAC,EAAE;MACdA,CAAC,CAACG,cAAc,EAAE;MAClB,IAAI,IAAI,CAACpB,KAAK,CAACE,IAAI,CAACc,MAAM,KAAK,CAAC,EAAE;QAChC;MACF;MACA,MAAMK,OAAO,GAAG;QACdnB,IAAI,EAAE,IAAI,CAACF,KAAK,CAACE,IAAI;QACrBoB,EAAE,EAAEC,IAAI,CAACC,GAAG;MACd,CAAC;MACD,IAAI,CAACb,QAAQ,CAACX,KAAK,KAAK;QACtBC,KAAK,EAAED,KAAK,CAACC,KAAK,CAACwB,MAAM,CAACJ,OAAO,CAAC;QAClCnB,IAAI,EAAE;MACR,CAAC,CAAC,CAAC;IACL;EACF;EAEA,MAAMwB,QAAQ,SAAShC,KAAK,CAACG,SAAS,CAAC;IACrCkB,MAAM,GAAG;MACP,oBACE;QAAA,UACG,IAAI,CAAChB,KAAK,CAACE,KAAK,CAAC0B,GAAG,CAACC,IAAI,iBACxB;UAAA,UAAmBA,IAAI,CAAC1B;QAAI,GAAnB0B,IAAI,CAACN,EAAE;UAAA;UAAA;UAAA;QAAA,QACjB;MAAC;QAAA;QAAA;QAAA;MAAA,QACC;IAET;EACF;AACF;AAAC,KA1EQ3B,GAAG;AA2EZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}